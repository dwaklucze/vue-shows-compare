@import '../variables';
@mixin row-basics {
  display: inline-block;
  position: relative;
  vertical-align: top;
}

@for $col from 1 through $columns {

  // without margin
  .w-#{$col} {
    @include row-basics;
    width: ((100 / $columns) * $col) * 1%;
  }

  // with margin
  .c-#{$col} {
    $calculated: calc(calc(calc(100% / #{$columns}) * #{$col}) - 1%);
    @include row-basics;
    width: $calculated;

    @if ($col < $columns) {
      margin-bottom: 1%;
      margin-right: 1%;
    }

    &-set {
      @include row-basics;
      width: calc(#{$calculated} + 1%);
      @if ($col < $columns) {
        margin-bottom: 1%;
        margin-right: 0;
      }

    }

  }
}

@each $breakpoint, $size in $base-sizes {
  @for $col from 1 through $columns {
    // with margin
    @include respond-to($breakpoint) {
      .w-#{$col}-#{$breakpoint} {
        @include row-basics;
        width: calc(calc(100% / #{$columns} * #{$col}) + 1%);
      }
    }

    // without margin
    @include respond-to($breakpoint) {
      .c-#{$col}-#{$breakpoint} {
        @include row-basics;
        width: calc(calc(100% / #{$columns} * #{$col}) - 1%);
        @if ($col < $columns) {
          margin-right: 1%;
        }
      }
    }

    // hide on viewport
    .no-#{$breakpoint} {
      @include respond-to($breakpoint) {
        display: none;
      }
    }
  }
}

.container {
  display: block;
  margin-left: auto;
  margin-right: auto;
  max-width: 90%;
  padding-left: .5%;
  padding-right: .5%;
}

.container-fluid {
  display: block;
  min-width: 100%;
  width: 100%;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.table {
  display: table;

  &-row {
    display: table-row;
  }

  &-cell {
    display: table-cell;
  }

}
